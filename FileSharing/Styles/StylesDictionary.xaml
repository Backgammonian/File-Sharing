<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:FileSharing"
    xmlns:converters="clr-namespace:FileSharing.Converters">

    <converters:BytesToMegabytesConverter x:Key="bytesToMegabytesConverter" />
    <converters:ConnectionStatusConverter x:Key="connectionStatusConverter" />
    <converters:DateTimeConverter x:Key="dateTimeConverter" />
    <converters:DownloadSpeedConverter x:Key="downloadSpeedConverter" />
    <converters:IPEndPointConverter x:Key="ipEndPointConverter" />
    <converters:ProgressConverter x:Key="progressConverter" />
    <converters:TimeSpanConverter x:Key="timeSpanConverter" />

    <Style x:Key="rectangleStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="7" />
        <Setter Property="Height" Value="7" />
        <Setter Property="Fill" Value="Black" />
        <Setter Property="Margin" Value="5, 0, 5, 0" />
    </Style>

    <Style x:Key="ellipseStyle" TargetType="Ellipse">
        <Setter Property="Width" Value="5" />
        <Setter Property="Height" Value="5" />
        <Setter Property="Fill" Value="Black" />
        <Setter Property="Margin" Value="5, 0, 5, 0" />
    </Style>

    <Style x:Key="baseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="titleStyle" TargetType="TextBlock" BasedOn="{StaticResource baseTextBlockStyle}">
        <Setter Property="FontSize" Value="18" />
    </Style>

    <Style x:Key="tabControlStyle" TargetType="TabControl">
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style x:Key="stackPanelStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="2" />
        <Setter Property="Orientation" Value="Horizontal" />
    </Style>
    
    <Style x:Key="stackPanelInListBoxStyle" TargetType="StackPanel" BasedOn="{StaticResource stackPanelStyle}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Orientation" Value="Vertical" />
    </Style>

    <Style x:Key="gridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="2" />
    </Style>

    <Style x:Key="baseButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style x:Key="peerEncryptionStatus" TargetType="TextBlock" BasedOn="{StaticResource baseTextBlockStyle}">
        <Setter Property="Text" Value="No encryption?"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEstablished}" Value="True">
                <Setter Property="Text" Value="Encrypted"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsEstablished}" Value="False">
                <Setter Property="Text" Value="NOT encrypted"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="popUpButtonStyle" TargetType="Button" BasedOn="{StaticResource baseButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger 
                Binding="{Binding RelativeSource={RelativeSource 
                    Mode=FindAncestor, 
                    AncestorType={x:Type ListBoxItem}},
                    Path=IsSelected}" 
                Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="cancellationStatus" TargetType="TextBlock" BasedOn="{StaticResource baseTextBlockStyle}">
        <Setter Property="Text" Value="Cancelled"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Foreground" Value="Blue" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsCancelled}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="cancellationButton" TargetType="Button" BasedOn="{StaticResource baseButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Style.Triggers>
            <DataTrigger 
                Binding="{Binding RelativeSource={RelativeSource 
                        Mode=FindAncestor, 
                        AncestorType={x:Type ListBoxItem}},
                        Path=IsSelected}" 
                    Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsDownloaded}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCancelled}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="finishTimeTextBlock" TargetType="TextBlock" BasedOn="{StaticResource baseTextBlockStyle}">
        <Setter Property="Text" Value="Finish time"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsFinished}" Value="True">
                <Setter Property="Text" Value="{Binding FinishTime, Converter={StaticResource dateTimeConverter}, StringFormat={}Finish time: {0}}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="hashTextBlock" TargetType="TextBlock" BasedOn="{StaticResource baseTextBlockStyle}">
        <Setter Property="Text" Value="Calculating hash..."/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsHashCalculated}" Value="True">
                <Setter Property="Text" Value="{Binding Hash, StringFormat={}SHA256 Hash: {0}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="isFileCorrupted" TargetType="TextBlock" BasedOn="{StaticResource baseTextBlockStyle}">
        <Setter Property="Text" Value="Error: file not found on local storage"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Foreground" Value="Red" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsCorrupted}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>