<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:FileSharing.Converters">

    <converters:BytesToMegabytesConverter x:Key="BytesToMegabytesConverter"/>
    <converters:DateTimeConverter x:Key="DateTimeConverter"/>
    <converters:DownloadSpeedConverter x:Key="DownloadSpeedConverter"/>
    <converters:IPEndPointConverter x:Key="IpEndPointConverter"/>
    <converters:ProgressConverter x:Key="ProgressConverter"/>
    <converters:TimeSpanConverter x:Key="TimeSpanConverter"/>

    <SolidColorBrush x:Key="ServerColor" Color="LightGreen" Opacity="0.5"/>
    <SolidColorBrush x:Key="ClientColor" Color="Blue" Opacity="0.1"/>

    <Style x:Key="RectangleStyle" TargetType="Rectangle">
        <Setter Property="Width" Value="7" />
        <Setter Property="Height" Value="7" />
        <Setter Property="Fill" Value="Black" />
        <Setter Property="Margin" Value="5, 0, 5, 0" />
    </Style>

    <Style x:Key="EllipseStyle" TargetType="Ellipse">
        <Setter Property="Width" Value="5"/>
        <Setter Property="Height" Value="5"/>
        <Setter Property="Fill" Value="Black"/>
        <Setter Property="Margin" Value="5, 0, 5, 0"/>
    </Style>

    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="PopUpTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                Mode=FindAncestor, 
                AncestorType={x:Type ListBoxItem}},
                Path=IsSelected}" 
                Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TitleStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style x:Key="StackPanelStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>
    
    <Style x:Key="StackPanelInListBoxStyle" TargetType="StackPanel" BasedOn="{StaticResource StackPanelStyle}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Orientation" Value="Vertical"/>
    </Style>

    <Style x:Key="GridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style x:Key="PeerEncryptionStatus" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Text" Value="❓ No encryption"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSecurityEnabled}" Value="True">
                <Setter Property="Text" Value="🔒 Encrypted"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding IsSecurityEnabled}" Value="False">
                <Setter Property="Text" Value="🔓 NOT encrypted"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopUpButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                Mode=FindAncestor, 
                AncestorType={x:Type ListBoxItem}},
                Path=IsSelected}" 
                Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CancellationStatus" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Text" Value="Cancelled"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Foreground" Value="Blue" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsCancelled}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CancellationButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                    Mode=FindAncestor, 
                    AncestorType={x:Type ListBoxItem}},
                    Path=IsSelected}" 
                    Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding IsDownloaded}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding IsCancelled}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HashVerificationStatus" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Foreground" Value="DarkBlue"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding HashVerificationStatus}" Value="Started">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Text" Value="Hash verification in progress..."/>
            </DataTrigger>

            <DataTrigger Binding="{Binding HashVerificationStatus}" Value="Failed">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Text" Value="Hash verification is failed. ❎"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding HashVerificationStatus}" Value="Positive">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Text" Value="Hash is correct! ✅"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding HashVerificationStatus}" Value="Negative">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Text" Value="Hash is NOT correct! ❎ Try download file again"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FinishTimeTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Text" Value="Finish time"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsFinished}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource 
                        Mode=FindAncestor, 
                        AncestorType={x:Type ListBoxItem}},
                        Path=IsSelected}" 
                        Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Text" Value="{Binding FinishTime, Converter={StaticResource DateTimeConverter}, StringFormat={}Finish time: {0}}"/>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HashTextBlock" TargetType="TextBlock" BasedOn="{StaticResource PopUpTextBlock}">
        <Setter Property="Text" Value="🔴 Calculating hash..."/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsHashCalculated}" Value="True">
                <Setter Property="Text" Value="{Binding Hash, StringFormat={}SHA256 Hash: {0}}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CalculatedHashTextBlock" TargetType="TextBlock" BasedOn="{StaticResource PopUpTextBlock}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding HashVerificationStatus}" Value="Started">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>